<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="com.github.houbb.mybatis.mapper.UserMapper">

    <resultMap id="aliasResultMap" >
        <result property="name" column="username"/>
        <result property="password" column="pwd"/>
    </resultMap>

    <sql id="baseColumn">
        name, password
    </sql>
    <sql id="baseCondition">
        id = ?
    </sql>

    <select id = "selectByIdWithTemplate" paramType="long"
            resultType = "com.github.houbb.mybatis.domain.User">
        select <include refid="baseColumn"/> from user where <include refid="baseCondition"/>
    </select>

    <select id = "selectById" paramType="long" resultType = "com.github.houbb.mybatis.domain.User">
        select name, password from user where id = ?
    </select>

    <select id="selectList" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
    </select>

    <select id = "selectMap" paramType="long"
            resultType = "java.util.Map">
        select name, password from user where id = ?
    </select>

    <select id = "selectByIdWithResultMap" paramType="long"
            resultMap = "aliasResultMap">
        select name username, password pwd from user where id = ?
    </select>

    <select id = "selectWithReplace" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        order by ${orderBy}
    </select>

    <select id = "selectByIdWithReplace" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        where id = #{id}
        order by ${orderBy}
    </select>

    <select id = "selectByIdAndName" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        where id = #{id}
        and name = #{name}
    </select>

    <select id = "selectByIdPlaceHolder" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        where id = #{id}
    </select>

    <select id = "selectByExample" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        where id = #{id}
    </select>

    <select id = "selectByExampleOrderBy" resultType="com.github.houbb.mybatis.domain.User">
        select name, password from user
        where id = #{ex.id}
        order by ${orderBy}
    </select>

    <insert id = "insertUser" paramType="com.github.houbb.mybatis.domain.User">
        insert into user
        (name, password, create_time)
        value
        (
        #{name}, #{password}, #{createTime}
        )
    </insert>

    <update id = "updateUserPassword">
        update user
        set password = #{newPassword}
        where id = #{id}
    </update>

    <delete id = "deleteUserById">
        delete from user
        where id = #{id}
    </delete>

</mapper>